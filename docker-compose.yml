version: '3.3'
services:
    web:
        image: nginx:1.17.4-alpine
        container_name: web
        restart: always
        ports:
            - 8080:80
        volumes:
            - ${MAIN_PATH}/web/html:/usr/share/nginx/html
            - ${MAIN_PATH}/web/conf:/etc/nginx
        networks:
            - frontend
    api:
        # ========== Node js Build REST Service ==========
        image: node:8.7-alpine
        container_name: node-api
        restart: always
        ports:
            - 13000:3000
        volumes:
            - ${MAIN_PATH}/restful-api:/app/rest-service
        working_dir: /app/rest-service
        command: npm start
        networks:
            frontend:
                ipv4_address: 10.0.30.11
            backend:
                ipv4_address: 10.0.20.11
        
    db:
        image: mysql
        container_name: mysql-db
        command: 
            --default-authentication-plugin=mysql_native_password
            --character-set-server=utf8mb4
            --collation-server=utf8mb4_unicode_ci
        restart: always
        # ports:
        #     - 13306:3306
        # environment:
        #     MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ${MAIN_PATH}/db/data:/var/lib/mysql
            - ${MAIN_PATH}/db/conf.d:/etc/mysql/conf.d
        networks:
            backend:
                ipv4_address: 10.0.20.10
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: myadmin
        restart: always
        ports:
            - 19000:80
        networks:
            - backend

networks:
    frontend:
        ipam:
            config:
                - subnet: 10.0.30.0/24
    backend:
        ipam:
            config:
                - subnet: 10.0.20.0/24

# volumes:
#     web-path: 
